% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng_distr.R
\name{frZABNB}
\alias{frZABNB}
\title{Random Generation for Zero Adjusted Beta Negative Binomial (ZABNB) Distribution}
\usage{
frZABNB(n, mu = 1, sigma = 1, nu = 1, tau = 0.1)
}
\arguments{
\item{n}{Number of observations to generate. If length(n) > 1, the length 
is taken to be the number required.}

\item{mu}{Vector of positive mean parameters for the BNB component. Default is 1.}

\item{sigma}{Vector of positive dispersion parameters for the BNB component. Default is 1.}

\item{nu}{Vector of positive shape parameters for the BNB component. Default is 1.}

\item{tau}{Vector of hurdle probabilities (0 < tau < 1). Default is 0.1.}
}
\value{
Vector of random integers from the ZABNB distribution.
}
\description{
Generates random deviates from the Zero Adjusted (Hurdle) Beta Negative 
Binomial distribution using high-quality pseudo-random number generation 
via the dqrng package.
}
\details{
This function generates random variates from the ZABNB distribution by:
\enumerate{
  \item Generating high-quality uniform random numbers using \code{dqrng::dqrunif}
  \item Applying the inverse CDF transformation using \code{fqZABNB}
}

The Zero Adjusted (Hurdle) Beta Negative Binomial distribution is a discrete 
distribution that models count data with a two-part process: a hurdle component 
that determines whether the count is zero, and a truncated BNB component for 
positive counts. Unlike zero inflation, this is a true hurdle model where 
zeros can only come from the hurdle process.

The probability mass function is:
\deqn{f(y|\mu,\sigma,\nu,\tau) = \begin{cases}
\tau & \text{if } y = 0 \\
(1-\tau) \cdot \frac{f_{BNB}(y|\mu,\sigma,\nu)}{1-f_{BNB}(0|\mu,\sigma,\nu)} & \text{if } y > 0
\end{cases}}
where \eqn{f_{BNB}} is the BNB probability mass function.

The key difference from zero inflation is that this model explicitly separates 
the zero-generating process from the count-generating process, making it 
appropriate when zeros and positive counts arise from different mechanisms.

The use of \code{dqrng::dqrunif} provides superior random number generation 
compared to base R's \code{runif}, with better statistical properties and 
significantly faster generation speeds.
}
\examples{
# Generate 100 random values with default parameters
x <- frZABNB(100)
table(x)
sum(x == 0) / length(x)  # Proportion of zeros from hurdle

# Generate with custom parameters - moderate hurdle probability
x <- frZABNB(1000, mu = 5, sigma = 2, nu = 1.5, tau = 0.25)
sum(x == 0) / length(x)  # Should be approximately 0.25

# Compare hurdle vs zero inflation models
x_zabnb <- frZABNB(1000, mu = 5, sigma = 2, nu = 1.5, tau = 0.2)  # Hurdle
x_zibnb <- frZIBNB(1000, mu = 5, sigma = 2, nu = 1.5, tau = 0.2)  # Zero inflation
sum(x_zabnb == 0) / length(x_zabnb)  # Exactly tau proportion
sum(x_zibnb == 0) / length(x_zibnb)  # tau + natural zeros

# Study the truncated positive part
x_positive <- x_zabnb[x_zabnb > 0]
summary(x_positive)  # No zeros by design

# Vector of parameters (recycling applies)
x <- frZABNB(10, mu = c(2, 4), sigma = 1.5, nu = 1, tau = c(0.15, 0.25))

}
\references{
Rigby, R.A., Stasinopoulos, D.M., Heller, G.Z., and De Bastiani, F. (2019). 
Distributions for modelling location, scale, and shape: Using GAMLSS in R. 
Chapman and Hall/CRC.
}
\seealso{
\code{\link{fqZABNB}} for the quantile function.

\code{\link{frBNB}} for the base BNB distribution without zero adjustment.

\code{\link{frZIBNB}} for the zero inflated version.

\code{\link[gamlss.dist]{rZABNB}} for the original implementation.

\code{\link[dqrng]{dqrunif}} for the high-quality random number generator used.
}

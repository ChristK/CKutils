% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fscramble_trajectories}
\alias{fscramble_trajectories}
\title{Scramble trajectories with random walks}
\usage{
fscramble_trajectories(x, pid, jumpiness = 1, inplace = TRUE)
}
\arguments{
\item{x}{A numeric vector of values to scramble, typically between 0 and 1.}

\item{pid}{A logical vector indicating the start of each trajectory 
(\code{TRUE} = start of new trajectory, \code{FALSE} = continuation).
Must be the same length as \code{x}.}

\item{jumpiness}{A positive numeric value controlling the magnitude of random jumps.
Higher values create larger perturbations. Default is 1.0.}

\item{inplace}{A logical value indicating whether to modify \code{x} in place (\code{TRUE})
or return a new vector (\code{FALSE}). Default is \code{TRUE}.}
}
\value{
If \code{inplace = TRUE}, returns \code{NULL} and modifies \code{x} directly.
If \code{inplace = FALSE}, returns a new numeric vector with scrambled values.
}
\description{
Scrambles rank trajectories of individuals using a continuous space random walk.
This function is useful for creating synthetic trajectories while ensuring the
distribution of exposure quintiles in the population remains uniform.
}
\details{
The function applies random perturbations to trajectories, where each point is
modified based on the previous point plus a random jump. The jumpiness parameter
controls the magnitude of these random walks. Values are constrained to remain
within the interval (0, 1).

For each trajectory (defined by \code{pid == TRUE} markers), the first value remains
unchanged, and subsequent values are perturbed based on the previous value and
a random exponential jump with mean 0.02 * jumpiness.

The random walks use the dqrng package for high-quality random number generation.
Seed and RNG type should be set using \code{dqset.seed()} and \code{dqRNGkind()} 
from the dqrng package.
}
\examples{
\dontrun{
library(dqrng)
dqset.seed(42)

# Create sample trajectory data
x <- c(0.1, 0.2, 0.3, 0.5, 0.6, 0.7)  # Two trajectories
pid <- c(TRUE, FALSE, FALSE, TRUE, FALSE, FALSE)  # Trajectory starts

# Scramble without modifying original
scrambled <- fscramble_trajectories(x, pid, jumpiness = 0.5, inplace = FALSE)
print(scrambled)

# Scramble in place
original_x <- x
fscramble_trajectories(x, pid, jumpiness = 1.0, inplace = TRUE)
print(x)  # x is now modified

# Use with data.table for multiple trajectories
library(data.table)
dt <- data.table(
  id = rep(1:3, each = 4),
  time = rep(1:4, 3),
  value = runif(12)
)
setkey(dt, id, time)
dt[, pid := time == 1]  # Mark trajectory starts
dt[, scrambled := fscramble_trajectories(value, pid, 
                                        jumpiness = 0.8, 
                                        inplace = FALSE)]
}

}
\seealso{
\code{\link[dqrng]{dqset.seed}}, \code{\link[dqrng]{dqRNGkind}}
}
\author{
Chris Kypridemos
}

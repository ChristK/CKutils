% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fqMN4}
\alias{fqMN4}
\title{Multinomial Distribution with 4 Categories - Quantile Function}
\usage{
fqMN4(p, mu, sigma, nu, lower_tail = TRUE, log_p = FALSE)
}
\arguments{
\item{p}{vector of probabilities (must be between 0 and 1).}

\item{mu}{vector of (positive) parameters for category 1.}

\item{sigma}{vector of (positive) parameters for category 2.}

\item{nu}{vector of (positive) parameters for category 3.}

\item{lower_tail}{logical; if TRUE (default), probabilities are P(X â‰¤ q),
otherwise P(X > q).}

\item{log_p}{logical; if TRUE, probabilities p are given as log(p).}
}
\value{
An integer vector of quantiles.
}
\description{
Quantile function for the multinomial distribution with 4 categories,
optimised for performance with SIMD vectorisation and parameter recycling.
}
\details{
The quantile function returns the smallest integer k such that
\deqn{P(X \leq k) \geq p}
The quantiles are computed by comparing p with the cumulative probabilities
of the multinomial distribution.

Parameters are recycled to the length of the longest vector following R's
standard recycling rules.
}
\note{
This implementation is based on the gamlss.dist package qMN4 function
but optimised for performance with SIMD vectorisation and parameter recycling.
}
\examples{
# Basic usage
p <- c(0.1, 0.3, 0.6, 0.9)
mu <- c(1, 1, 1, 1)
sigma <- c(1, 1, 1, 1)
nu <- c(1, 1, 1, 1)

# Calculate quantiles
fqMN4(p, mu, sigma, nu)

# Upper tail quantiles
fqMN4(p, mu, sigma, nu, lower_tail = FALSE)

# Log probabilities
fqMN4(log(p), mu, sigma, nu, log_p = TRUE)

# Parameter recycling
fqMN4(c(0.1, 0.3, 0.6, 0.9), mu = 2, sigma = 1, nu = 0.5)

}
\references{
Rigby, R. A. and Stasinopoulos, D. M. (2005). Generalized additive models
for location, scale and shape. Applied Statistics, 54, 507-554.
}
\seealso{
\code{\link{fdMN4}}, \code{\link{fpMN4}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng_distr.R
\name{frBNB}
\alias{frBNB}
\title{Random Generation for Beta Negative Binomial (BNB) Distribution}
\usage{
frBNB(n, mu = 1, sigma = 1, nu = 1)
}
\arguments{
\item{n}{Number of observations to generate. If length(n) > 1, the length 
is taken to be the number required.}

\item{mu}{Vector of positive mean parameters. Default is 1.}

\item{sigma}{Vector of positive dispersion parameters. Default is 1.}

\item{nu}{Vector of positive shape parameters. Default is 1.}
}
\value{
Vector of random integers from the BNB distribution.
}
\description{
Generates random deviates from the Beta Negative Binomial distribution 
using high-quality pseudo-random number generation via the dqrng package.
}
\details{
This function generates random variates from the BNB distribution by:
\enumerate{
  \item Generating high-quality uniform random numbers using \code{dqrng::dqrunif}
  \item Applying the inverse CDF transformation using \code{fqBNB}
}

The Beta Negative Binomial distribution is a discrete distribution that 
extends the negative binomial distribution by allowing for additional 
overdispersion through a beta-distributed mixing parameter. It's particularly 
useful for modelling count data with excess variability.

The probability mass function is:
\deqn{f(y|\mu,\sigma,\nu) = \frac{\Gamma(y+1/\nu)\mathrm{B}(y+(\mu\nu)/\sigma, 1/\sigma+1/\nu+1)}{\Gamma(y+1)\Gamma(1/\nu)\mathrm{B}((\mu\nu)/\sigma, 1/\sigma+1)}}
for \eqn{y = 0, 1, 2, \ldots}, \eqn{\mu > 0}, \eqn{\sigma > 0}, and \eqn{\nu > 0}.

The use of \code{dqrng::dqrunif} provides superior random number generation 
compared to base R's \code{runif}, with better statistical properties and 
significantly faster generation speeds.
}
\examples{
# Generate 100 random values with default parameters
x <- frBNB(100)
table(x)

# Generate with custom parameters
x <- frBNB(1000, mu = 5, sigma = 2, nu = 1.5)
summary(x)
mean(x)  # Should be approximately mu = 5

# Compare overdispersion with different sigma values
x_low <- frBNB(500, mu = 3, sigma = 0.5, nu = 1)   # Low overdispersion
x_high <- frBNB(500, mu = 3, sigma = 2, nu = 1)    # High overdispersion
var(x_low); var(x_high)  # Higher sigma gives more variability

# Vector of parameters (recycling applies)
x <- frBNB(10, mu = c(2, 4), sigma = c(1, 1.5), nu = 1)

}
\references{
Rigby, R.A., Stasinopoulos, D.M., Heller, G.Z., and De Bastiani, F. (2019). 
Distributions for modelling location, scale, and shape: Using GAMLSS in R. 
Chapman and Hall/CRC.
}
\seealso{
\code{\link{fdBNB}}, \code{\link{fpBNB}}, \code{\link{fqBNB}} for 
other BNB distribution functions.

\code{\link[gamlss.dist]{rBNB}} for the original implementation.

\code{\link[dqrng]{dqrunif}} for the high-quality random number generator used.
}

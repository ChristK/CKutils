% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng_distr.R
\name{frDPO}
\alias{frDPO}
\title{Random Generation for Double Poisson (DPO) Distribution}
\usage{
frDPO(n, mu = 1, sigma = 1)
}
\arguments{
\item{n}{Number of observations to generate. If length(n) > 1, the length 
is taken to be the number required.}

\item{mu}{Vector of positive mean parameters. Default is 1.}

\item{sigma}{Vector of positive dispersion parameters. Default is 1.}
}
\value{
Vector of random integers from the DPO distribution.
}
\description{
Generates random deviates from the Double Poisson distribution using 
high-quality pseudo-random number generation via the dqrng package.
}
\details{
This function generates random variates from the DPO distribution by:
\enumerate{
  \item Generating high-quality uniform random numbers using \code{dqrng::dqrunif}
  \item Applying the inverse CDF transformation using \code{fqDPO}
}

The Double Poisson distribution is a discrete distribution that extends 
the Poisson distribution by adding a dispersion parameter sigma. It's 
particularly useful for modeling count data that exhibits either 
overdispersion (sigma > 1) or underdispersion (sigma < 1).

The probability mass function is:
\deqn{f(y|\mu,\sigma) = \frac{1}{C(\mu,\sigma)} \sqrt{\frac{1}{2\pi\sigma}} e^{-\frac{\mu}{\sigma}} \frac{e^{y \log y - y}}{y!} e^{\frac{y \log \mu}{\sigma}} e^{\frac{y}{\sigma}} e^{-\frac{y \log y}{\sigma}}}
for \eqn{y = 0, 1, 2, \ldots}, \eqn{\mu > 0}, and \eqn{\sigma > 0}, where 
\eqn{C(\mu,\sigma)} is a normalizing constant.

Key properties:
\itemize{
  \item \strong{Mean}: \eqn{E[Y] = \mu}
  \item \strong{Variance}: \eqn{Var[Y] = \mu \sigma}
  \item \strong{Overdispersion}: When \eqn{\sigma > 1}, variance > mean
  \item \strong{Underdispersion}: When \eqn{\sigma < 1}, variance < mean
  \item \strong{Poisson limit}: When \eqn{\sigma = 1}, reduces to Poisson(\eqn{\mu})
}

The use of \code{dqrng::dqrunif} provides superior random number generation 
compared to base R's \code{runif}, with better statistical properties and 
significantly faster generation speeds.
}
\examples{
# Generate 100 random values with default parameters (Poisson-like)
x <- frDPO(100)
table(x)
mean(x)  # Should be approximately mu = 1
var(x)   # Should be approximately mu * sigma = 1

# Generate with overdispersion (sigma > 1)
x_over <- frDPO(1000, mu = 5, sigma = 2)
mean(x_over)  # Should be approximately 5
var(x_over)   # Should be approximately 10 (5 * 2)

# Generate with underdispersion (sigma < 1)
x_under <- frDPO(1000, mu = 5, sigma = 0.5)
mean(x_under)  # Should be approximately 5
var(x_under)   # Should be approximately 2.5 (5 * 0.5)

# Compare dispersion patterns
x_poisson <- rpois(1000, lambda = 5)           # Regular Poisson
x_dpo_over <- frDPO(1000, mu = 5, sigma = 2)   # Overdispersed
x_dpo_under <- frDPO(1000, mu = 5, sigma = 0.5)  # Underdispersed

var(x_poisson)    # â‰ˆ 5 (variance = mean)
var(x_dpo_over)   # > 5 (overdispersed)
var(x_dpo_under)  # < 5 (underdispersed)

# Vector of parameters (recycling applies)
x <- frDPO(10, mu = c(2, 4), sigma = c(0.8, 1.2))

}
\references{
Rigby, R.A., Stasinopoulos, D.M., Heller, G.Z., and De Bastiani, F. (2019). 
Distributions for modeling location, scale, and shape: Using GAMLSS in R. 
Chapman and Hall/CRC.

Efron, B. (1986). Double exponential families and their use in generalized 
linear regression. Journal of the American Statistical Association, 81(395), 709-721.
}
\seealso{
\code{\link{fdDPO}}, \code{\link{fpDPO}}, \code{\link{fqDPO}} for 
other DPO distribution functions.

\code{\link[gamlss.dist]{rDPO}} for the original implementation.

\code{\link[dqrng]{dqrunif}} for the high-quality random number generator used.
}

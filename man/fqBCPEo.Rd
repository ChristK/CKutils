% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fqBCPEo}
\alias{fqBCPEo}
\title{Box-Cox Power Exponential Distribution (BCPEo) - Quantile Function}
\usage{
fqBCPEo(p, mu, sigma, nu, tau, lower_tail = TRUE, log_p = FALSE)
}
\arguments{
\item{p}{vector of probabilities (must be between 0 and 1).}

\item{mu}{vector of (positive) location parameters.}

\item{sigma}{vector of (positive) scale parameters.}

\item{nu}{vector of shape parameters.}

\item{tau}{vector of (positive) shape parameters.}

\item{lower_tail}{logical; if TRUE (default), probabilities are P(X â‰¤ x), 
otherwise P(X > x).}

\item{log_p}{logical; if TRUE, probabilities p are given as log(p).}
}
\value{
A numeric vector of quantiles.
}
\description{
Quantile function for the Box-Cox Power Exponential distribution with log link for mu,
optimised for SIMD vectorisation and unique parameter values.
}
\details{
The Box-Cox Power Exponential (BCPEo) distribution is a four-parameter continuous
distribution defined on the positive real line. This function computes the
quantile function (inverse CDF).

The quantile function involves solving:
\deqn{F(x|\mu,\sigma,\nu,\tau) = p}
where F is the cumulative distribution function. The solution is obtained by
first computing the quantile z_a from the underlying T distribution, then
transforming back to the original scale.

When \eqn{\nu = 0}: \eqn{x = \mu \exp(\sigma z_a)}
When \eqn{\nu \neq 0}: \eqn{x = \mu (\nu\sigma z_a + 1)^{1/\nu}}

This implementation is optimised for cases where tau values are rarely repeated,
using SIMD vectorisation and per-element computation without caching.
}
\note{
This implementation is based on the gamlss.dist package qBCPEo function
but optimised for performance with unique parameter values and SIMD vectorisation.
}
\examples{
# Basic usage
p <- c(0.1, 0.25, 0.5, 0.75, 0.9)
mu <- c(2, 2, 2, 2, 2)
sigma <- c(0.5, 0.5, 0.5, 0.5, 0.5)
nu <- c(1, 1, 1, 1, 1)
tau <- c(2, 2, 2, 2, 2)

# Calculate quantiles
fqBCPEo(p, mu, sigma, nu, tau)

# Upper tail quantiles
fqBCPEo(p, mu, sigma, nu, tau, lower_tail = FALSE)

# Log probabilities
log_p <- log(p)
fqBCPEo(log_p, mu, sigma, nu, tau, log_p = TRUE)

}
\references{
Rigby, R. A. and Stasinopoulos, D. M. (2003) Flexible regression smoothing 
using GAMLSS. Applied Statistics, 52, 229-237.

Stasinopoulos, D. M., Rigby, R. A., Heller, G. Z., Voudouris, V., and 
De Bastiani, F. (2017) Flexible Regression and Smoothing: Using GAMLSS in R,
Chapman and Hall/CRC.
}
\seealso{
\code{\link{fdBCPEo}}, \code{\link{fpBCPEo}}
qBCPEo quantile function
}

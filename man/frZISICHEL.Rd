% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rng_distr.R
\name{frZISICHEL}
\alias{frZISICHEL}
\title{Random Generation for Zero-Inflated Sichel Distribution}
\usage{
frZISICHEL(n, mu = 1, sigma = 1, nu = -0.5, tau = 0.1)
}
\arguments{
\item{n}{Number of observations to generate. If length(n) > 1, the length 
is taken to be the number required.}

\item{mu}{Vector of positive mean parameters. Default is 1.}

\item{sigma}{Vector of positive dispersion parameters. Default is 1.}

\item{nu}{Vector of shape parameters (real values). Default is -0.5.}

\item{tau}{Vector of zero-inflation probabilities (0 < tau < 1). Default is 0.1.}
}
\value{
Vector of random integers from the Zero-Inflated Sichel distribution.
}
\description{
Generates random deviates from the Zero-Inflated Sichel distribution using 
high-quality pseudo-random number generation via the dqrng package.
}
\details{
This function generates random variates from the Zero-Inflated Sichel distribution by:
\enumerate{
  \item Generating high-quality uniform random numbers using \code{dqrng::dqrunif}
  \item Applying the inverse CDF transformation using \code{fqZISICHEL}
}

The Zero-Inflated Sichel distribution is a four-parameter discrete distribution 
that extends the Sichel distribution to handle excess zeros. It's a mixture 
of a point mass at zero and a standard Sichel distribution, making it 
particularly useful for modelling count data with structural zeros.

The probability mass function is:
\deqn{f(y|\mu,\sigma,\nu,\tau) = \begin{cases}
\tau + (1-\tau) \cdot f_{SICHEL}(0|\mu,\sigma,\nu) & \text{if } y = 0 \\
(1-\tau) \cdot f_{SICHEL}(y|\mu,\sigma,\nu) & \text{if } y > 0
\end{cases}}
where \eqn{f_{SICHEL}} is the Sichel probability mass function.

Key characteristics:
\itemize{
  \item Support: 0, 1, 2, ... (non-negative integers)
  \item Higher proportion of zeros than standard Sichel
  \item Combines flexibility of Sichel with zero-inflation capability
  \item Useful for modelling count processes with excess zeros
}

The use of \code{dqrng::dqrunif} provides superior random number generation 
compared to base R's \code{runif}, with better statistical properties and 
significantly faster generation speeds.
}
\examples{
# Generate 100 random values with default parameters
x <- frZISICHEL(100)
table(x)
sum(x == 0) / length(x)  # Proportion of zeros

# Generate with custom parameters - moderate zero inflation
x <- frZISICHEL(1000, mu = 5, sigma = 1.5, nu = -0.5, tau = 0.2)
mean(x)  # Mean will be affected by zero inflation
sum(x == 0) / length(x)  # Should be > 0.2 due to natural + inflated zeros

# Compare with regular Sichel (no zero inflation)
x_sichel <- frSICHEL(1000, mu = 5, sigma = 1.5, nu = -0.5)
x_zi_sichel <- frZISICHEL(1000, mu = 5, sigma = 1.5, nu = -0.5, tau = 0.3)

sum(x_sichel == 0) / length(x_sichel)       # Natural zeros only
sum(x_zi_sichel == 0) / length(x_zi_sichel) # Natural + inflated zeros

# Study effect of tau on zero inflation
x_low_tau <- frZISICHEL(1000, mu = 3, sigma = 1, nu = 0, tau = 0.1)
x_high_tau <- frZISICHEL(1000, mu = 3, sigma = 1, nu = 0, tau = 0.4)

sum(x_low_tau == 0) / length(x_low_tau)   # Lower zero proportion
sum(x_high_tau == 0) / length(x_high_tau) # Higher zero proportion

# Vector of parameters (recycling applies)
x <- frZISICHEL(10, mu = c(2, 4), sigma = 1.5, nu = c(-0.5, 0.5), tau = c(0.1, 0.2))

# Model data with high zero inflation and flexible count part
x <- frZISICHEL(1000, mu = 8, sigma = 2, nu = -1, tau = 0.4)

# Examine the structure
table(x[x <= 10])  # Focus on lower counts
sum(x == 0) / length(x)  # Zero proportion
mean(x[x > 0])  # Mean of non-zero part

}
\references{
Rigby, R.A., Stasinopoulos, D.M., Heller, G.Z., and De Bastiani, F. (2019). 
Distributions for modelling location, scale, and shape: Using GAMLSS in R. 
Chapman and Hall/CRC.
}
\seealso{
\code{\link{fpZISICHEL}}, \code{\link{fqZISICHEL}} for 
other Zero-Inflated Sichel distribution functions.

\code{\link{frSICHEL}} for the standard Sichel distribution.

\code{\link[gamlss.dist]{rZISICHEL}} for the original implementation.

\code{\link[dqrng]{dqrunif}} for the high-quality random number generator used.
}
